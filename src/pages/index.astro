---
import { generate } from "../helpers/generate";
import Layout from "../layouts/Layout.astro";

const number = generate();
---

<Layout title="Number Generator">
  <main>
    <h1>Welcome to <span class="text-gradient">Number Generator</span></h1>
    <form class="instructions" data-generator>
      <p>
        <strong data-number>{number}</strong>
      </p>
      <button class="link-card" type="submit">
        <span>New number</span>
      </button>
    </form>
  </main>
</Layout>

<script>
  import { generate } from "../helpers/generate";

  const generators = document.querySelectorAll("[data-generator]");
  for (const generator of generators) {
    generator.addEventListener("submit", (event) => {
      if (event.target instanceof Element) {
        const number = generate();
        const numEls = event.target.querySelectorAll("[data-number]");
        for (const numEl of numEls) {
          numEl.textContent = number.toString();
        }
        event.preventDefault();
      }
    });
  }
</script>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  button {
    border: none;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card {
    list-style: none;
    display: flex;
    padding: 0.25rem;
    background-color: white;
    background-image: none;
    background-size: 400%;
    border-radius: 0.6rem;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -2px rgba(0, 0, 0, 0.1);
  }
  .link-card > span {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1rem 1.3rem;
    border-radius: 0.35rem;
    color: #111;
    background-color: white;
    opacity: 0.8;
  }
  .link-card:is(:hover, :focus-visible) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
</style>
